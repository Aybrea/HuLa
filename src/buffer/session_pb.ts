// @generated by protoc-gen-es v2.2.2 with parameter "target=ts"
// @generated from file session.proto (package proto, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file session.proto.
 */
export const file_session: GenFile = /*@__PURE__*/
  fileDesc("");

/**
 * 主消息结构  受到数据先解析主消息
 *
 * @generated from message proto.MainData
 */
export type MainData = Message<"proto.MainData"> & {
  /**
   * 消息类型
   *
   * @generated from field: proto.MessageType msgType = 1;
   */
  msgType: MessageType;

  /**
   * 消息内容
   *
   * @generated from field: bytes data = 2;
   */
  data: Uint8Array;
};

/**
 * Describes the message proto.MainData.
 * Use `create(MainDataSchema)` to create a new message.
 */
export const MainDataSchema: GenMessage<MainData> = /*@__PURE__*/
  messageDesc(file_session, 0);

/**
 * Type_CSPushDelChatsAck
 *
 * @generated from message proto.CSPushDelChatsAck
 */
export type CSPushDelChatsAck = Message<"proto.CSPushDelChatsAck"> & {
  /**
   * 会话信息
   *
   * @generated from field: proto.ChatInfo chatInfo = 1;
   */
  chatInfo?: ChatInfo;

  /**
   * 最后一条消息id
   *
   * @generated from field: int64 lastId = 2;
   */
  lastId: bigint;
};

/**
 * Describes the message proto.CSPushDelChatsAck.
 * Use `create(CSPushDelChatsAckSchema)` to create a new message.
 */
export const CSPushDelChatsAckSchema: GenMessage<CSPushDelChatsAck> = /*@__PURE__*/
  messageDesc(file_session, 1);

/**
 * Type_CSMsgTop
 *
 * @generated from message proto.CSMsgTop
 */
export type CSMsgTop = Message<"proto.CSMsgTop"> & {
  /**
   * 消息id
   *
   * @generated from field: string msgId = 1;
   */
  msgId: string;

  /**
   * 是否置顶
   *
   * @generated from field: bool top = 2;
   */
  top: boolean;
};

/**
 * Describes the message proto.CSMsgTop.
 * Use `create(CSMsgTopSchema)` to create a new message.
 */
export const CSMsgTopSchema: GenMessage<CSMsgTop> = /*@__PURE__*/
  messageDesc(file_session, 2);

/**
 * Type_SCMsgTop
 *
 * @generated from message proto.SCMsgTop
 */
export type SCMsgTop = Message<"proto.SCMsgTop"> & {
  /**
   * 消息id
   *
   * @generated from field: string msgId = 1;
   */
  msgId: string;

  /**
   * 是否置顶
   *
   * @generated from field: bool top = 2;
   */
  top: boolean;

  /**
   * 服务器Id
   *
   * @generated from field: int64 serverId = 3;
   */
  serverId: bigint;
};

/**
 * Describes the message proto.SCMsgTop.
 * Use `create(SCMsgTopSchema)` to create a new message.
 */
export const SCMsgTopSchema: GenMessage<SCMsgTop> = /*@__PURE__*/
  messageDesc(file_session, 3);

/**
 * Type_SCPushMsgTop
 *
 * @generated from message proto.SCPushMsgTop
 */
export type SCPushMsgTop = Message<"proto.SCPushMsgTop"> & {
  /**
   * 消息id
   *
   * @generated from field: string msgId = 1;
   */
  msgId: string;

  /**
   * 是否置顶
   *
   * @generated from field: bool top = 2;
   */
  top: boolean;

  /**
   * 服务器Id
   *
   * @generated from field: int64 serverId = 3;
   */
  serverId: bigint;
};

/**
 * Describes the message proto.SCPushMsgTop.
 * Use `create(SCPushMsgTopSchema)` to create a new message.
 */
export const SCPushMsgTopSchema: GenMessage<SCPushMsgTop> = /*@__PURE__*/
  messageDesc(file_session, 4);

/**
 * Type_CSMsgTopAck
 *
 * @generated from message proto.CSMsgTopAck
 */
export type CSMsgTopAck = Message<"proto.CSMsgTopAck"> & {
  /**
   * 服务器Id
   *
   * @generated from field: int64 serverId = 1;
   */
  serverId: bigint;
};

/**
 * Describes the message proto.CSMsgTopAck.
 * Use `create(CSMsgTopAckSchema)` to create a new message.
 */
export const CSMsgTopAckSchema: GenMessage<CSMsgTopAck> = /*@__PURE__*/
  messageDesc(file_session, 5);

/**
 * Type_CSLoadChatRecord
 *
 * @generated from message proto.CSLoadChatRecord
 */
export type CSLoadChatRecord = Message<"proto.CSLoadChatRecord"> & {
  /**
   * 记录id
   *
   * @generated from field: string recordId = 1;
   */
  recordId: string;

  /**
   * 客户端id
   *
   * @generated from field: int64 requestId = 2;
   */
  requestId: bigint;
};

/**
 * Describes the message proto.CSLoadChatRecord.
 * Use `create(CSLoadChatRecordSchema)` to create a new message.
 */
export const CSLoadChatRecordSchema: GenMessage<CSLoadChatRecord> = /*@__PURE__*/
  messageDesc(file_session, 6);

/**
 * Type_SCLoadChatRecord
 *
 * @generated from message proto.SCLoadChatRecord
 */
export type SCLoadChatRecord = Message<"proto.SCLoadChatRecord"> & {
  /**
   * 聊天记录
   *
   * @generated from field: repeated proto.SCLoadChatRecord.ChatRecord chatRecords = 1;
   */
  chatRecords: SCLoadChatRecord_ChatRecord[];

  /**
   * @generated from field: int64 requestId = 2;
   */
  requestId: bigint;
};

/**
 * Describes the message proto.SCLoadChatRecord.
 * Use `create(SCLoadChatRecordSchema)` to create a new message.
 */
export const SCLoadChatRecordSchema: GenMessage<SCLoadChatRecord> = /*@__PURE__*/
  messageDesc(file_session, 7);

/**
 * @generated from message proto.SCLoadChatRecord.ChatRecord
 */
export type SCLoadChatRecord_ChatRecord = Message<"proto.SCLoadChatRecord.ChatRecord"> & {
  /**
   * 消息
   *
   * @generated from field: proto.ChatMsg chatMsg = 1;
   */
  chatMsg?: ChatMsg;

  /**
   * 用户信息
   *
   * @generated from field: proto.RecordUser user = 2;
   */
  user?: RecordUser;
};

/**
 * Describes the message proto.SCLoadChatRecord.ChatRecord.
 * Use `create(SCLoadChatRecord_ChatRecordSchema)` to create a new message.
 */
export const SCLoadChatRecord_ChatRecordSchema: GenMessage<SCLoadChatRecord_ChatRecord> = /*@__PURE__*/
  messageDesc(file_session, 7, 0);

/**
 * 聊天记录里面的用户信息
 *
 * @generated from message proto.RecordUser
 */
export type RecordUser = Message<"proto.RecordUser"> & {
  /**
   * 用户id
   *
   * @generated from field: int64 userId = 1;
   */
  userId: bigint;

  /**
   * 用户昵称
   *
   * @generated from field: string nickname = 2;
   */
  nickname: string;

  /**
   * 用户头像
   *
   * @generated from field: string icon = 3;
   */
  icon: string;
};

/**
 * Describes the message proto.RecordUser.
 * Use `create(RecordUserSchema)` to create a new message.
 */
export const RecordUserSchema: GenMessage<RecordUser> = /*@__PURE__*/
  messageDesc(file_session, 8);

/**
 * 名字信息
 *
 * @generated from message proto.NameInfo
 */
export type NameInfo = Message<"proto.NameInfo"> & {
  /**
   * 用户id
   *
   * @generated from field: int64 userId = 1;
   */
  userId: bigint;

  /**
   * 用户昵称
   *
   * @generated from field: string nickname = 2;
   */
  nickname: string;
};

/**
 * Describes the message proto.NameInfo.
 * Use `create(NameInfoSchema)` to create a new message.
 */
export const NameInfoSchema: GenMessage<NameInfo> = /*@__PURE__*/
  messageDesc(file_session, 9);

/**
 * Type_CSGroupEventAck
 *
 * @generated from message proto.CSGroupEventAck
 */
export type CSGroupEventAck = Message<"proto.CSGroupEventAck"> & {
  /**
   * 会话ID
   *
   * @generated from field: int64 chatId = 1;
   */
  chatId: bigint;

  /**
   * 消息ID
   *
   * @generated from field: int64 msgId = 2;
   */
  msgId: bigint;
};

/**
 * Describes the message proto.CSGroupEventAck.
 * Use `create(CSGroupEventAckSchema)` to create a new message.
 */
export const CSGroupEventAckSchema: GenMessage<CSGroupEventAck> = /*@__PURE__*/
  messageDesc(file_session, 10);

/**
 * Type_SCOtherLogin
 *
 * @generated from message proto.SCOtherLogin
 */
export type SCOtherLogin = Message<"proto.SCOtherLogin"> & {
};

/**
 * Describes the message proto.SCOtherLogin.
 * Use `create(SCOtherLoginSchema)` to create a new message.
 */
export const SCOtherLoginSchema: GenMessage<SCOtherLogin> = /*@__PURE__*/
  messageDesc(file_session, 11);

/**
 * Type_SCGroupEventNotice
 *
 * @generated from message proto.SCGroupEventNotice
 */
export type SCGroupEventNotice = Message<"proto.SCGroupEventNotice"> & {
  /**
   * 群id
   *
   * @generated from field: int64 chatId = 1;
   */
  chatId: bigint;

  /**
   * 公告内容
   *
   * @generated from field: string notice = 2;
   */
  notice: string;

  /**
   * 操作者
   *
   * @generated from field: proto.NameInfo user = 3;
   */
  user?: NameInfo;

  /**
   * 消息ID
   *
   * @generated from field: int64 msgId = 4;
   */
  msgId: bigint;

  /**
   * 时间戳
   *
   * @generated from field: int64 time = 5;
   */
  time: bigint;
};

/**
 * Describes the message proto.SCGroupEventNotice.
 * Use `create(SCGroupEventNoticeSchema)` to create a new message.
 */
export const SCGroupEventNoticeSchema: GenMessage<SCGroupEventNotice> = /*@__PURE__*/
  messageDesc(file_session, 12);

/**
 * Type_SCGroupEventDismiss
 *
 * @generated from message proto.SCGroupEventDismiss
 */
export type SCGroupEventDismiss = Message<"proto.SCGroupEventDismiss"> & {
  /**
   * 群id
   *
   * @generated from field: int64 chatId = 1;
   */
  chatId: bigint;

  /**
   * 操作者
   *
   * @generated from field: proto.NameInfo user = 2;
   */
  user?: NameInfo;

  /**
   * 消息ID
   *
   * @generated from field: int64 msgId = 4;
   */
  msgId: bigint;

  /**
   * 时间戳
   *
   * @generated from field: int64 time = 5;
   */
  time: bigint;
};

/**
 * Describes the message proto.SCGroupEventDismiss.
 * Use `create(SCGroupEventDismissSchema)` to create a new message.
 */
export const SCGroupEventDismissSchema: GenMessage<SCGroupEventDismiss> = /*@__PURE__*/
  messageDesc(file_session, 13);

/**
 * Type_SCGroupEventAdminTransfer
 *
 * @generated from message proto.SCGroupEventAdminTransfer
 */
export type SCGroupEventAdminTransfer = Message<"proto.SCGroupEventAdminTransfer"> & {
  /**
   * 群id
   *
   * @generated from field: int64 chatId = 1;
   */
  chatId: bigint;

  /**
   * 操作者
   *
   * @generated from field: proto.NameInfo user = 2;
   */
  user?: NameInfo;

  /**
   * 新群主
   *
   * @generated from field: proto.NameInfo admin = 3;
   */
  admin?: NameInfo;

  /**
   * 消息ID
   *
   * @generated from field: int64 msgId = 4;
   */
  msgId: bigint;

  /**
   * 时间戳
   *
   * @generated from field: int64 time = 5;
   */
  time: bigint;
};

/**
 * Describes the message proto.SCGroupEventAdminTransfer.
 * Use `create(SCGroupEventAdminTransferSchema)` to create a new message.
 */
export const SCGroupEventAdminTransferSchema: GenMessage<SCGroupEventAdminTransfer> = /*@__PURE__*/
  messageDesc(file_session, 14);

/**
 * Type_SCGroupEventMutex
 *
 * @generated from message proto.SCGroupEventMutex
 */
export type SCGroupEventMutex = Message<"proto.SCGroupEventMutex"> & {
  /**
   * 群id
   *
   * @generated from field: int64 chatId = 1;
   */
  chatId: bigint;

  /**
   * 禁言状态 0:不禁言 1:禁言
   *
   * @generated from field: int32 mutex = 2;
   */
  mutex: number;

  /**
   * 操作者
   *
   * @generated from field: proto.NameInfo user = 3;
   */
  user?: NameInfo;

  /**
   * 消息ID
   *
   * @generated from field: int64 msgId = 4;
   */
  msgId: bigint;

  /**
   * 时间戳
   *
   * @generated from field: int64 time = 5;
   */
  time: bigint;
};

/**
 * Describes the message proto.SCGroupEventMutex.
 * Use `create(SCGroupEventMutexSchema)` to create a new message.
 */
export const SCGroupEventMutexSchema: GenMessage<SCGroupEventMutex> = /*@__PURE__*/
  messageDesc(file_session, 15);

/**
 * Type_SCGroupEventNameEdit
 *
 * @generated from message proto.SCGroupEventNameEdit
 */
export type SCGroupEventNameEdit = Message<"proto.SCGroupEventNameEdit"> & {
  /**
   * 群id
   *
   * @generated from field: int64 chatId = 1;
   */
  chatId: bigint;

  /**
   * 群名称
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * 操作者
   *
   * @generated from field: proto.NameInfo user = 3;
   */
  user?: NameInfo;

  /**
   * 消息ID
   *
   * @generated from field: int64 msgId = 4;
   */
  msgId: bigint;

  /**
   * 时间戳
   *
   * @generated from field: int64 time = 5;
   */
  time: bigint;
};

/**
 * Describes the message proto.SCGroupEventNameEdit.
 * Use `create(SCGroupEventNameEditSchema)` to create a new message.
 */
export const SCGroupEventNameEditSchema: GenMessage<SCGroupEventNameEdit> = /*@__PURE__*/
  messageDesc(file_session, 16);

/**
 * Type_SCGroupEventMemberExit
 *
 * @generated from message proto.SCGroupEventMemberExit
 */
export type SCGroupEventMemberExit = Message<"proto.SCGroupEventMemberExit"> & {
  /**
   * 群id
   *
   * @generated from field: int64 chatId = 1;
   */
  chatId: bigint;

  /**
   * 操作者
   *
   * @generated from field: proto.NameInfo user = 2;
   */
  user?: NameInfo;

  /**
   * 消息id
   *
   * @generated from field: int64 msgId = 3;
   */
  msgId: bigint;

  /**
   * 时间戳
   *
   * @generated from field: int64 time = 5;
   */
  time: bigint;
};

/**
 * Describes the message proto.SCGroupEventMemberExit.
 * Use `create(SCGroupEventMemberExitSchema)` to create a new message.
 */
export const SCGroupEventMemberExitSchema: GenMessage<SCGroupEventMemberExit> = /*@__PURE__*/
  messageDesc(file_session, 17);

/**
 * Type_SCGroupEventMemberDel
 *
 * @generated from message proto.SCGroupEventMemberDel
 */
export type SCGroupEventMemberDel = Message<"proto.SCGroupEventMemberDel"> & {
  /**
   * 群id
   *
   * @generated from field: int64 chatId = 1;
   */
  chatId: bigint;

  /**
   * 删除成员
   *
   * @generated from field: repeated proto.NameInfo members = 2;
   */
  members: NameInfo[];

  /**
   * 操作者
   *
   * @generated from field: proto.NameInfo user = 3;
   */
  user?: NameInfo;

  /**
   * 消息id
   *
   * @generated from field: int64 msgId = 4;
   */
  msgId: bigint;

  /**
   * 时间戳
   *
   * @generated from field: int64 time = 5;
   */
  time: bigint;
};

/**
 * Describes the message proto.SCGroupEventMemberDel.
 * Use `create(SCGroupEventMemberDelSchema)` to create a new message.
 */
export const SCGroupEventMemberDelSchema: GenMessage<SCGroupEventMemberDel> = /*@__PURE__*/
  messageDesc(file_session, 18);

/**
 * Type_SCGroupEventMemberAdd
 *
 * @generated from message proto.SCGroupEventMemberAdd
 */
export type SCGroupEventMemberAdd = Message<"proto.SCGroupEventMemberAdd"> & {
  /**
   * 群id
   *
   * @generated from field: int64 chatId = 1;
   */
  chatId: bigint;

  /**
   * 新增成员
   *
   * @generated from field: repeated proto.NameInfo members = 2;
   */
  members: NameInfo[];

  /**
   * 操作者
   *
   * @generated from field: proto.NameInfo user = 3;
   */
  user?: NameInfo;

  /**
   * 消息id
   *
   * @generated from field: int64 msgId = 4;
   */
  msgId: bigint;

  /**
   * 时间戳
   *
   * @generated from field: int64 time = 5;
   */
  time: bigint;
};

/**
 * Describes the message proto.SCGroupEventMemberAdd.
 * Use `create(SCGroupEventMemberAddSchema)` to create a new message.
 */
export const SCGroupEventMemberAddSchema: GenMessage<SCGroupEventMemberAdd> = /*@__PURE__*/
  messageDesc(file_session, 19);

/**
 * 聊天信息
 *
 * @generated from message proto.ChatInfo
 */
export type ChatInfo = Message<"proto.ChatInfo"> & {
  /**
   * 聊天类型
   *
   * @generated from field: proto.ChatType chatType = 1;
   */
  chatType: ChatType;

  /**
   * 聊天id
   *
   * @generated from field: int64 chatId = 2;
   */
  chatId: bigint;
};

/**
 * Describes the message proto.ChatInfo.
 * Use `create(ChatInfoSchema)` to create a new message.
 */
export const ChatInfoSchema: GenMessage<ChatInfo> = /*@__PURE__*/
  messageDesc(file_session, 20);

/**
 * Type_CSDelChat
 *
 * @generated from message proto.CSDelChat
 */
export type CSDelChat = Message<"proto.CSDelChat"> & {
  /**
   * 聊天信息
   *
   * @generated from field: proto.ChatInfo chatInfo = 1;
   */
  chatInfo?: ChatInfo;

  /**
   * 最后一条消息id
   *
   * @generated from field: int64 lastId = 2;
   */
  lastId: bigint;

  /**
   * 是否删除对面的消息 (删除私聊会话时候使用)
   *
   * @generated from field: optional bool isDelOther = 3;
   */
  isDelOther?: boolean;
};

/**
 * Describes the message proto.CSDelChat.
 * Use `create(CSDelChatSchema)` to create a new message.
 */
export const CSDelChatSchema: GenMessage<CSDelChat> = /*@__PURE__*/
  messageDesc(file_session, 21);

/**
 * Type_SCDelChat
 *
 * @generated from message proto.SCDelChat
 */
export type SCDelChat = Message<"proto.SCDelChat"> & {
  /**
   * 聊天信息
   *
   * @generated from field: proto.ChatInfo chatInfo = 1;
   */
  chatInfo?: ChatInfo;

  /**
   * 最后一条消息id
   *
   * @generated from field: int64 lastId = 2;
   */
  lastId: bigint;
};

/**
 * Describes the message proto.SCDelChat.
 * Use `create(SCDelChatSchema)` to create a new message.
 */
export const SCDelChatSchema: GenMessage<SCDelChat> = /*@__PURE__*/
  messageDesc(file_session, 22);

/**
 * Type_SCPushDelChat
 *
 * @generated from message proto.SCPushDelChat
 */
export type SCPushDelChat = Message<"proto.SCPushDelChat"> & {
  /**
   * 聊天信息
   *
   * @generated from field: proto.ChatInfo chatInfo = 1;
   */
  chatInfo?: ChatInfo;

  /**
   * 最后一条消息id
   *
   * @generated from field: int64 lastId = 2;
   */
  lastId: bigint;

  /**
   * 操作者ID
   *
   * @generated from field: int64 userId = 3;
   */
  userId: bigint;
};

/**
 * Describes the message proto.SCPushDelChat.
 * Use `create(SCPushDelChatSchema)` to create a new message.
 */
export const SCPushDelChatSchema: GenMessage<SCPushDelChat> = /*@__PURE__*/
  messageDesc(file_session, 23);

/**
 * Type_SCInitPushDelChats
 *
 * @generated from message proto.SCInitPushDelChats
 */
export type SCInitPushDelChats = Message<"proto.SCInitPushDelChats"> & {
  /**
   * 聊天列表
   *
   * @generated from field: repeated proto.SCInitPushDelChats.DelInfo delInfos = 1;
   */
  delInfos: SCInitPushDelChats_DelInfo[];
};

/**
 * Describes the message proto.SCInitPushDelChats.
 * Use `create(SCInitPushDelChatsSchema)` to create a new message.
 */
export const SCInitPushDelChatsSchema: GenMessage<SCInitPushDelChats> = /*@__PURE__*/
  messageDesc(file_session, 24);

/**
 * @generated from message proto.SCInitPushDelChats.DelInfo
 */
export type SCInitPushDelChats_DelInfo = Message<"proto.SCInitPushDelChats.DelInfo"> & {
  /**
   * 聊天信息
   *
   * @generated from field: proto.ChatInfo chatInfo = 1;
   */
  chatInfo?: ChatInfo;

  /**
   * 最后一条消息id
   *
   * @generated from field: int64 lastId = 2;
   */
  lastId: bigint;
};

/**
 * Describes the message proto.SCInitPushDelChats.DelInfo.
 * Use `create(SCInitPushDelChats_DelInfoSchema)` to create a new message.
 */
export const SCInitPushDelChats_DelInfoSchema: GenMessage<SCInitPushDelChats_DelInfo> = /*@__PURE__*/
  messageDesc(file_session, 24, 0);

/**
 * 推送消息数据
 * Type_SCPushMessageInfo
 *
 * @generated from message proto.SCPushMessageInfo
 */
export type SCPushMessageInfo = Message<"proto.SCPushMessageInfo"> & {
  /**
   * 消息列表
   *
   * @generated from field: repeated proto.SCPushMessageInfo.MessageInfo messageList = 1;
   */
  messageList: SCPushMessageInfo_MessageInfo[];
};

/**
 * Describes the message proto.SCPushMessageInfo.
 * Use `create(SCPushMessageInfoSchema)` to create a new message.
 */
export const SCPushMessageInfoSchema: GenMessage<SCPushMessageInfo> = /*@__PURE__*/
  messageDesc(file_session, 25);

/**
 * @generated from message proto.SCPushMessageInfo.MessageInfo
 */
export type SCPushMessageInfo_MessageInfo = Message<"proto.SCPushMessageInfo.MessageInfo"> & {
  /**
   * 聊天类型
   *
   * @generated from field: proto.ChatType chatType = 1;
   */
  chatType: ChatType;

  /**
   * 聊天id
   *
   * @generated from field: int64 chatId = 2;
   */
  chatId: bigint;

  /**
   * 最新的消息ID
   *
   * @generated from field: int64 msgId = 3;
   */
  msgId: bigint;
};

/**
 * Describes the message proto.SCPushMessageInfo.MessageInfo.
 * Use `create(SCPushMessageInfo_MessageInfoSchema)` to create a new message.
 */
export const SCPushMessageInfo_MessageInfoSchema: GenMessage<SCPushMessageInfo_MessageInfo> = /*@__PURE__*/
  messageDesc(file_session, 25, 0);

/**
 * Type_CSAckPushMsg
 *
 * @generated from message proto.CSAckPushMsg
 */
export type CSAckPushMsg = Message<"proto.CSAckPushMsg"> & {
  /**
   * 推送消息id
   *
   * @generated from field: int64 pushId = 1;
   */
  pushId: bigint;
};

/**
 * Describes the message proto.CSAckPushMsg.
 * Use `create(CSAckPushMsgSchema)` to create a new message.
 */
export const CSAckPushMsgSchema: GenMessage<CSAckPushMsg> = /*@__PURE__*/
  messageDesc(file_session, 26);

/**
 * Type_CSPullMsgList
 *
 * @generated from message proto.CSPullMsgList
 */
export type CSPullMsgList = Message<"proto.CSPullMsgList"> & {
  /**
   * 聊天类型
   *
   * @generated from field: proto.ChatType chatType = 1;
   */
  chatType: ChatType;

  /**
   * 聊天id
   *
   * @generated from field: int64 chatId = 2;
   */
  chatId: bigint;

  /**
   * 客户端保存的最后消息ID(服务器ID)
   *
   * @generated from field: int64 lastMsgId = 3;
   */
  lastMsgId: bigint;

  /**
   * 服务器保存的最后消息ID
   *
   * @generated from field: int64 pushMsgId = 4;
   */
  pushMsgId: bigint;

  /**
   * 拉取消息数量
   *
   * @generated from field: int32 count = 5;
   */
  count: number;

  /**
   * 客户端请求ID
   *
   * @generated from field: int64 clientId = 6;
   */
  clientId: bigint;
};

/**
 * Describes the message proto.CSPullMsgList.
 * Use `create(CSPullMsgListSchema)` to create a new message.
 */
export const CSPullMsgListSchema: GenMessage<CSPullMsgList> = /*@__PURE__*/
  messageDesc(file_session, 27);

/**
 * Type_SCPullMsgList
 *
 * @generated from message proto.SCPullMsgList
 */
export type SCPullMsgList = Message<"proto.SCPullMsgList"> & {
  /**
   * 聊天类型
   *
   * @generated from field: proto.ChatType chatType = 1;
   */
  chatType: ChatType;

  /**
   * 聊天id
   *
   * @generated from field: int64 chatId = 2;
   */
  chatId: bigint;

  /**
   * 消息列表
   *
   * @generated from field: repeated proto.SCPullMsgList.PushInfo pushInfos = 3;
   */
  pushInfos: SCPullMsgList_PushInfo[];

  /**
   * 推送ID
   *
   * @generated from field: int64 pushId = 4;
   */
  pushId: bigint;

  /**
   * 客户端请求ID
   *
   * @generated from field: int64 clientId = 5;
   */
  clientId: bigint;

  /**
   * 总消息数量
   *
   * @generated from field: int64 total = 6;
   */
  total: bigint;
};

/**
 * Describes the message proto.SCPullMsgList.
 * Use `create(SCPullMsgListSchema)` to create a new message.
 */
export const SCPullMsgListSchema: GenMessage<SCPullMsgList> = /*@__PURE__*/
  messageDesc(file_session, 28);

/**
 * @generated from message proto.SCPullMsgList.PushInfo
 */
export type SCPullMsgList_PushInfo = Message<"proto.SCPullMsgList.PushInfo"> & {
  /**
   * 消息内容
   *
   * @generated from field: proto.ChatMsg chatMsg = 1;
   */
  chatMsg?: ChatMsg;

  /**
   * 消息id
   *
   * @generated from field: int64 msgId = 2;
   */
  msgId: bigint;

  /**
   * 客户端ID
   *
   * @generated from field: int64 clientId = 3;
   */
  clientId: bigint;

  /**
   * 发送者ID
   *
   * @generated from field: int64 senderId = 4;
   */
  senderId: bigint;

  /**
   * @generated from field: int64 serverTime = 5;
   */
  serverTime: bigint;

  /**
   * @generated from field: int64 clientTime = 6;
   */
  clientTime: bigint;

  /**
   * 消息状态 0 已发送 1 已送达 2 已读
   *
   * @generated from field: int32 status = 7;
   */
  status: number;

  /**
   * 群聊天属性
   *
   * @generated from field: optional proto.GroupChatMsgAttr groupChatMsgAttr = 8;
   */
  groupChatMsgAttr?: GroupChatMsgAttr;
};

/**
 * Describes the message proto.SCPullMsgList.PushInfo.
 * Use `create(SCPullMsgList_PushInfoSchema)` to create a new message.
 */
export const SCPullMsgList_PushInfoSchema: GenMessage<SCPullMsgList_PushInfo> = /*@__PURE__*/
  messageDesc(file_session, 28, 0);

/**
 * Type_SCPushLastMsgId
 *
 * @generated from message proto.SCPushLastMsgId
 */
export type SCPushLastMsgId = Message<"proto.SCPushLastMsgId"> & {
  /**
   * 聊天类型
   *
   * @generated from field: proto.ChatType chatType = 1;
   */
  chatType: ChatType;

  /**
   * 聊天id
   *
   * @generated from field: int64 chatId = 2;
   */
  chatId: bigint;

  /**
   * 最后一条消息id
   *
   * @generated from field: int64 lastMsgId = 3;
   */
  lastMsgId: bigint;
};

/**
 * Describes the message proto.SCPushLastMsgId.
 * Use `create(SCPushLastMsgIdSchema)` to create a new message.
 */
export const SCPushLastMsgIdSchema: GenMessage<SCPushLastMsgId> = /*@__PURE__*/
  messageDesc(file_session, 29);

/**
 * Type_CSHeartbeat
 *
 * @generated from message proto.CSHeartbeat
 */
export type CSHeartbeat = Message<"proto.CSHeartbeat"> & {
};

/**
 * Describes the message proto.CSHeartbeat.
 * Use `create(CSHeartbeatSchema)` to create a new message.
 */
export const CSHeartbeatSchema: GenMessage<CSHeartbeat> = /*@__PURE__*/
  messageDesc(file_session, 30);

/**
 * Type_SCHeartbeat
 *
 * @generated from message proto.SCHeartbeat
 */
export type SCHeartbeat = Message<"proto.SCHeartbeat"> & {
  /**
   * 服务器时间戳
   *
   * @generated from field: int64 serverTime = 1;
   */
  serverTime: bigint;
};

/**
 * Describes the message proto.SCHeartbeat.
 * Use `create(SCHeartbeatSchema)` to create a new message.
 */
export const SCHeartbeatSchema: GenMessage<SCHeartbeat> = /*@__PURE__*/
  messageDesc(file_session, 31);

/**
 * 发送聊天信息
 * Type_CSChatMsg
 *
 * @generated from message proto.CSChatMsg
 */
export type CSChatMsg = Message<"proto.CSChatMsg"> & {
  /**
   * 聊天id
   *
   * @generated from field: int64 chatId = 1;
   */
  chatId: bigint;

  /**
   * 聊天信息
   *
   * @generated from field: proto.ChatMsg chatMsg = 2;
   */
  chatMsg?: ChatMsg;

  /**
   * 客户端时间戳
   *
   * @generated from field: int64 clientTime = 3;
   */
  clientTime: bigint;

  /**
   * 客户端消息ID
   *
   * @generated from field: int64 clientId = 4;
   */
  clientId: bigint;

  /**
   * 聊天类型
   *
   * @generated from field: proto.ChatType chatType = 5;
   */
  chatType: ChatType;
};

/**
 * Describes the message proto.CSChatMsg.
 * Use `create(CSChatMsgSchema)` to create a new message.
 */
export const CSChatMsgSchema: GenMessage<CSChatMsg> = /*@__PURE__*/
  messageDesc(file_session, 32);

/**
 * 聊天信息
 *
 * @generated from message proto.ChatMsg
 */
export type ChatMsg = Message<"proto.ChatMsg"> & {
  /**
   * 信息类型
   *
   * @generated from field: proto.ChatMsg.MsgType msgType = 1;
   */
  msgType: ChatMsg_MsgType;

  /**
   * 文本内容
   *
   * @generated from field: optional string content = 2;
   */
  content?: string;

  /**
   * 图片信息
   *
   * @generated from field: optional proto.ImageInfo image = 3;
   */
  image?: ImageInfo;

  /**
   * 语音信息
   *
   * @generated from field: optional proto.VoiceInfo voice = 4;
   */
  voice?: VoiceInfo;

  /**
   * 名片信息
   *
   * @generated from field: optional proto.CardInfo card = 5;
   */
  card?: CardInfo;

  /**
   * 位置信息
   *
   * @generated from field: optional proto.LocationInfo location = 6;
   */
  location?: LocationInfo;

  /**
   * 文件信息
   *
   * @generated from field: optional proto.FileInfo file = 7;
   */
  file?: FileInfo;

  /**
   * 客户端发到服务器聊天记录
   *
   * @generated from field: optional proto.CSRecordInfo csRecord = 8;
   */
  csRecord?: CSRecordInfo;

  /**
   * 服务器到客户端聊天记录
   *
   * @generated from field: optional proto.SCRecordInfo scRecord = 9;
   */
  scRecord?: SCRecordInfo;

  /**
   * 删除消息
   *
   * @generated from field: optional proto.DeleteMsg deleteMsg = 10;
   */
  deleteMsg?: DeleteMsg;

  /**
   * @用户id
   *
   * @generated from field: repeated int64 atUsers = 100;
   */
  atUsers: bigint[];

  /**
   * 回复消息id  回复(引用)类型消息需要添加该字段
   *
   * @generated from field: optional int64 replyId = 101;
   */
  replyId?: bigint;
};

/**
 * Describes the message proto.ChatMsg.
 * Use `create(ChatMsgSchema)` to create a new message.
 */
export const ChatMsgSchema: GenMessage<ChatMsg> = /*@__PURE__*/
  messageDesc(file_session, 33);

/**
 * @generated from enum proto.ChatMsg.MsgType
 */
export enum ChatMsg_MsgType {
  /**
   * 默认值
   *
   * @generated from enum value: Unknown = 0;
   */
  Unknown = 0,

  /**
   * 文本信息
   *
   * @generated from enum value: Text = 1;
   */
  Text = 1,

  /**
   * 图片
   *
   * @generated from enum value: Image = 2;
   */
  Image = 2,

  /**
   * 语音信息
   *
   * @generated from enum value: Voice = 3;
   */
  Voice = 3,

  /**
   * 名片信息
   *
   * @generated from enum value: Card = 4;
   */
  Card = 4,

  /**
   * 位置信息
   *
   * @generated from enum value: Location = 5;
   */
  Location = 5,

  /**
   * 文件信息
   *
   * @generated from enum value: File = 6;
   */
  File = 6,

  /**
   * 客户端发到服务器聊天记录
   *
   * @generated from enum value: CSRecord = 7;
   */
  CSRecord = 7,

  /**
   * 服务器推送到客户端聊天记录
   *
   * @generated from enum value: SCRecord = 8;
   */
  SCRecord = 8,

  /**
   * 删除消息
   *
   * @generated from enum value: DeleteMsg = 9;
   */
  DeleteMsg = 9,
}

/**
 * Describes the enum proto.ChatMsg.MsgType.
 */
export const ChatMsg_MsgTypeSchema: GenEnum<ChatMsg_MsgType> = /*@__PURE__*/
  enumDesc(file_session, 33, 0);

/**
 * 删除消息
 *
 * @generated from message proto.DeleteMsg
 */
export type DeleteMsg = Message<"proto.DeleteMsg"> & {
  /**
   * 消息id列表
   *
   * @generated from field: repeated int64 msgIds = 1;
   */
  msgIds: bigint[];

  /**
   * 操作者Id
   *
   * @generated from field: int64 userId = 2;
   */
  userId: bigint;

  /**
   * 是否删除对方（只有单聊时候可用）  删除自己的消息只同步给自己端
   *
   * @generated from field: optional bool isDelOther = 3;
   */
  isDelOther?: boolean;
};

/**
 * Describes the message proto.DeleteMsg.
 * Use `create(DeleteMsgSchema)` to create a new message.
 */
export const DeleteMsgSchema: GenMessage<DeleteMsg> = /*@__PURE__*/
  messageDesc(file_session, 34);

/**
 * 客户端到服务器聊天记录
 *
 * @generated from message proto.CSRecordInfo
 */
export type CSRecordInfo = Message<"proto.CSRecordInfo"> & {
  /**
   * 聊天id
   *
   * @generated from field: int64 chatId = 1;
   */
  chatId: bigint;

  /**
   * 聊天id列表
   *
   * @generated from field: repeated int64 msgIds = 2;
   */
  msgIds: bigint[];
};

/**
 * Describes the message proto.CSRecordInfo.
 * Use `create(CSRecordInfoSchema)` to create a new message.
 */
export const CSRecordInfoSchema: GenMessage<CSRecordInfo> = /*@__PURE__*/
  messageDesc(file_session, 35);

/**
 * 服务器到客户端聊天记录
 *
 * @generated from message proto.SCRecordInfo
 */
export type SCRecordInfo = Message<"proto.SCRecordInfo"> & {
  /**
   * 标题
   *
   * @generated from field: string title = 1;
   */
  title: string;

  /**
   * 内容
   *
   * @generated from field: repeated string content = 2;
   */
  content: string[];

  /**
   * 记录id
   *
   * @generated from field: string recordId = 3;
   */
  recordId: string;

  /**
   * 记录数量
   *
   * @generated from field: int32 count = 4;
   */
  count: number;
};

/**
 * Describes the message proto.SCRecordInfo.
 * Use `create(SCRecordInfoSchema)` to create a new message.
 */
export const SCRecordInfoSchema: GenMessage<SCRecordInfo> = /*@__PURE__*/
  messageDesc(file_session, 36);

/**
 * 文件信息
 *
 * @generated from message proto.FileInfo
 */
export type FileInfo = Message<"proto.FileInfo"> & {
  /**
   * 文件地址
   *
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * 文件名
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * 文件大小
   *
   * @generated from field: int64 size = 3;
   */
  size: bigint;

  /**
   * 文件md5
   *
   * @generated from field: string md5 = 4;
   */
  md5: string;
};

/**
 * Describes the message proto.FileInfo.
 * Use `create(FileInfoSchema)` to create a new message.
 */
export const FileInfoSchema: GenMessage<FileInfo> = /*@__PURE__*/
  messageDesc(file_session, 37);

/**
 * 位置信息
 *
 * @generated from message proto.LocationInfo
 */
export type LocationInfo = Message<"proto.LocationInfo"> & {
  /**
   * 纬度
   *
   * @generated from field: double latitude = 1;
   */
  latitude: number;

  /**
   * 经度
   *
   * @generated from field: double longitude = 2;
   */
  longitude: number;

  /**
   * 地名
   *
   * @generated from field: string place = 3;
   */
  place: string;

  /**
   * 详细地址
   *
   * @generated from field: string address = 4;
   */
  address: string;

  /**
   * 图片
   *
   * @generated from field: string photoUrl = 5;
   */
  photoUrl: string;
};

/**
 * Describes the message proto.LocationInfo.
 * Use `create(LocationInfoSchema)` to create a new message.
 */
export const LocationInfoSchema: GenMessage<LocationInfo> = /*@__PURE__*/
  messageDesc(file_session, 38);

/**
 * 图片信息
 *
 * @generated from message proto.ImageInfo
 */
export type ImageInfo = Message<"proto.ImageInfo"> & {
  /**
   * 图片地址 (传入时只需要传图片名字)
   *
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * 图片宽度
   *
   * @generated from field: int32 width = 2;
   */
  width: number;

  /**
   * 图片高度
   *
   * @generated from field: int32 height = 3;
   */
  height: number;

  /**
   * 缩略图地址 (传入时只需要传图片名字)
   *
   * @generated from field: string thumbnail = 4;
   */
  thumbnail: string;
};

/**
 * Describes the message proto.ImageInfo.
 * Use `create(ImageInfoSchema)` to create a new message.
 */
export const ImageInfoSchema: GenMessage<ImageInfo> = /*@__PURE__*/
  messageDesc(file_session, 39);

/**
 * 语音信息
 *
 * @generated from message proto.VoiceInfo
 */
export type VoiceInfo = Message<"proto.VoiceInfo"> & {
  /**
   * 语音地址
   *
   * @generated from field: string url = 1;
   */
  url: string;

  /**
   * 语音时长
   *
   * @generated from field: int32 duration = 2;
   */
  duration: number;
};

/**
 * Describes the message proto.VoiceInfo.
 * Use `create(VoiceInfoSchema)` to create a new message.
 */
export const VoiceInfoSchema: GenMessage<VoiceInfo> = /*@__PURE__*/
  messageDesc(file_session, 40);

/**
 * 名片信息
 *
 * @generated from message proto.CardInfo
 */
export type CardInfo = Message<"proto.CardInfo"> & {
  /**
   * 用户id
   *
   * @generated from field: int64 userId = 1;
   */
  userId: bigint;

  /**
   * 用户名
   *
   * @generated from field: string nickname = 2;
   */
  nickname: string;

  /**
   * 用户头像
   *
   * @generated from field: string icon = 3;
   */
  icon: string;
};

/**
 * Describes the message proto.CardInfo.
 * Use `create(CardInfoSchema)` to create a new message.
 */
export const CardInfoSchema: GenMessage<CardInfo> = /*@__PURE__*/
  messageDesc(file_session, 41);

/**
 * Type_SCChatMsg
 *
 * @generated from message proto.SCChatMsg
 */
export type SCChatMsg = Message<"proto.SCChatMsg"> & {
  /**
   * 0 成功 1 失败
   *
   * @generated from field: proto.SCChatMsg.RetCode retCode = 1;
   */
  retCode: SCChatMsg_RetCode;

  /**
   * 服务器消息id
   *
   * @generated from field: int64 msgId = 2;
   */
  msgId: bigint;

  /**
   * 客户端消息ID
   *
   * @generated from field: int64 clientId = 3;
   */
  clientId: bigint;

  /**
   * 聊天ID
   *
   * @generated from field: int64 chatId = 4;
   */
  chatId: bigint;

  /**
   * 服务器时间戳
   *
   * @generated from field: int64 serverTime = 5;
   */
  serverTime: bigint;
};

/**
 * Describes the message proto.SCChatMsg.
 * Use `create(SCChatMsgSchema)` to create a new message.
 */
export const SCChatMsgSchema: GenMessage<SCChatMsg> = /*@__PURE__*/
  messageDesc(file_session, 42);

/**
 * @generated from enum proto.SCChatMsg.RetCode
 */
export enum SCChatMsg_RetCode {
  /**
   * 默认值
   *
   * @generated from enum value: Unknown = 0;
   */
  Unknown = 0,

  /**
   * 成功
   *
   * @generated from enum value: Success = 1;
   */
  Success = 1,

  /**
   * 聊天ID错误
   *
   * @generated from enum value: ChatIdError = 2;
   */
  ChatIdError = 2,

  /**
   * 消息类型错误
   *
   * @generated from enum value: TypeError = 3;
   */
  TypeError = 3,

  /**
   * 禁言
   *
   * @generated from enum value: Mute = 4;
   */
  Mute = 4,
}

/**
 * Describes the enum proto.SCChatMsg.RetCode.
 */
export const SCChatMsg_RetCodeSchema: GenEnum<SCChatMsg_RetCode> = /*@__PURE__*/
  enumDesc(file_session, 42, 0);

/**
 * 群聊消息属性
 *
 * @generated from message proto.GroupChatMsgAttr
 */
export type GroupChatMsgAttr = Message<"proto.GroupChatMsgAttr"> & {
  /**
   * 发消息昵称
   *
   * @generated from field: string nickname = 1;
   */
  nickname: string;

  /**
   * 发消息头像
   *
   * @generated from field: string icon = 2;
   */
  icon: string;
};

/**
 * Describes the message proto.GroupChatMsgAttr.
 * Use `create(GroupChatMsgAttrSchema)` to create a new message.
 */
export const GroupChatMsgAttrSchema: GenMessage<GroupChatMsgAttr> = /*@__PURE__*/
  messageDesc(file_session, 43);

/**
 * Type_SCPushChatMsg
 *
 * @generated from message proto.SCPushChatMsg
 */
export type SCPushChatMsg = Message<"proto.SCPushChatMsg"> & {
  /**
   * 聊天信息
   *
   * @generated from field: proto.ChatMsg chatMsg = 1;
   */
  chatMsg?: ChatMsg;

  /**
   * 服务器时间戳
   *
   * @generated from field: int64 serverTime = 2;
   */
  serverTime: bigint;

  /**
   * 聊天ID
   *
   * @generated from field: int64 chatId = 3;
   */
  chatId: bigint;

  /**
   * 聊天类型
   *
   * @generated from field: proto.ChatType chatType = 4;
   */
  chatType: ChatType;

  /**
   * 服务器消息ID
   *
   * @generated from field: int64 msgId = 5;
   */
  msgId: bigint;

  /**
   * 客户端发送时间
   *
   * @generated from field: int64 clientTime = 6;
   */
  clientTime: bigint;

  /**
   * 推送ID
   *
   * @generated from field: int64 pushId = 7;
   */
  pushId: bigint;

  /**
   * 客户端消息ID
   *
   * @generated from field: int64 clientId = 8;
   */
  clientId: bigint;

  /**
   * 发送者Id
   *
   * @generated from field: int64 senderId = 9;
   */
  senderId: bigint;

  /**
   * 群聊消息属性
   *
   * @generated from field: optional proto.GroupChatMsgAttr groupChatMsgAttr = 10;
   */
  groupChatMsgAttr?: GroupChatMsgAttr;
};

/**
 * Describes the message proto.SCPushChatMsg.
 * Use `create(SCPushChatMsgSchema)` to create a new message.
 */
export const SCPushChatMsgSchema: GenMessage<SCPushChatMsg> = /*@__PURE__*/
  messageDesc(file_session, 44);

/**
 * Type_CSAuthToken
 *
 * @generated from message proto.CSAuthToken
 */
export type CSAuthToken = Message<"proto.CSAuthToken"> & {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * 客户端类型
   *
   * @generated from field: proto.CSAuthToken.ClientType clientType = 2;
   */
  clientType: CSAuthToken_ClientType;

  /**
   * 设备ID  客户端生成的uuid
   *
   * @generated from field: string deviceId = 3;
   */
  deviceId: string;
};

/**
 * Describes the message proto.CSAuthToken.
 * Use `create(CSAuthTokenSchema)` to create a new message.
 */
export const CSAuthTokenSchema: GenMessage<CSAuthToken> = /*@__PURE__*/
  messageDesc(file_session, 45);

/**
 * @generated from enum proto.CSAuthToken.ClientType
 */
export enum CSAuthToken_ClientType {
  /**
   * 未知
   *
   * @generated from enum value: Unknown = 0;
   */
  Unknown = 0,

  /**
   * 移动端
   *
   * @generated from enum value: Mobile = 1;
   */
  Mobile = 1,

  /**
   * web
   *
   * @generated from enum value: Web = 2;
   */
  Web = 2,
}

/**
 * Describes the enum proto.CSAuthToken.ClientType.
 */
export const CSAuthToken_ClientTypeSchema: GenEnum<CSAuthToken_ClientType> = /*@__PURE__*/
  enumDesc(file_session, 45, 0);

/**
 * Type_SCAuthToken
 *
 * @generated from message proto.SCAuthToken
 */
export type SCAuthToken = Message<"proto.SCAuthToken"> & {
  /**
   * @generated from field: proto.SCAuthToken.RetCode code = 1;
   */
  code: SCAuthToken_RetCode;
};

/**
 * Describes the message proto.SCAuthToken.
 * Use `create(SCAuthTokenSchema)` to create a new message.
 */
export const SCAuthTokenSchema: GenMessage<SCAuthToken> = /*@__PURE__*/
  messageDesc(file_session, 46);

/**
 * @generated from enum proto.SCAuthToken.RetCode
 */
export enum SCAuthToken_RetCode {
  /**
   * 未知错误
   *
   * @generated from enum value: Unknown = 0;
   */
  Unknown = 0,

  /**
   * 成功
   *
   * @generated from enum value: Success = 1;
   */
  Success = 1,

  /**
   * token错误
   *
   * @generated from enum value: TokenError = 2;
   */
  TokenError = 2,

  /**
   * 参数错误
   *
   * @generated from enum value: ParamError = 3;
   */
  ParamError = 3,
}

/**
 * Describes the enum proto.SCAuthToken.RetCode.
 */
export const SCAuthToken_RetCodeSchema: GenEnum<SCAuthToken_RetCode> = /*@__PURE__*/
  enumDesc(file_session, 46, 0);

/**
 * @generated from message proto.ReadMsg
 */
export type ReadMsg = Message<"proto.ReadMsg"> & {
  /**
   * 聊天id
   *
   * @generated from field: int64 chatId = 1;
   */
  chatId: bigint;

  /**
   * 聊天类型
   *
   * @generated from field: proto.ChatType chatType = 2;
   */
  chatType: ChatType;

  /**
   * 最后一条消息id
   *
   * @generated from field: int64 msgId = 3;
   */
  msgId: bigint;

  /**
   * 客户端消息id
   *
   * @generated from field: int64 clientId = 4;
   */
  clientId: bigint;
};

/**
 * Describes the message proto.ReadMsg.
 * Use `create(ReadMsgSchema)` to create a new message.
 */
export const ReadMsgSchema: GenMessage<ReadMsg> = /*@__PURE__*/
  messageDesc(file_session, 47);

/**
 * 读取消息通知
 * Type_CSReadMsg
 *
 * @generated from message proto.CSReadMsg
 */
export type CSReadMsg = Message<"proto.CSReadMsg"> & {
  /**
   * 聊天信息
   *
   * @generated from field: proto.ReadMsg readMsg = 1;
   */
  readMsg?: ReadMsg;
};

/**
 * Describes the message proto.CSReadMsg.
 * Use `create(CSReadMsgSchema)` to create a new message.
 */
export const CSReadMsgSchema: GenMessage<CSReadMsg> = /*@__PURE__*/
  messageDesc(file_session, 48);

/**
 * 推送他人阅读自己消息
 * Type_SCPushReadMsg
 *
 * @generated from message proto.SCPushReadMsg
 */
export type SCPushReadMsg = Message<"proto.SCPushReadMsg"> & {
  /**
   * 聊天信息
   *
   * @generated from field: proto.ReadMsg readMsg = 1;
   */
  readMsg?: ReadMsg;

  /**
   * 阅读者ID
   *
   * @generated from field: int64 userId = 2;
   */
  userId: bigint;
};

/**
 * Describes the message proto.SCPushReadMsg.
 * Use `create(SCPushReadMsgSchema)` to create a new message.
 */
export const SCPushReadMsgSchema: GenMessage<SCPushReadMsg> = /*@__PURE__*/
  messageDesc(file_session, 49);

/**
 * 定义枚举类型
 *
 * @generated from enum proto.MessageType
 */
export enum MessageType {
  /**
   * 默认值
   *
   * @generated from enum value: Unknown = 0;
   */
  Unknown = 0,

  /**
   * @generated from enum value: Type_CSHeartbeat = 1;
   */
  Type_CSHeartbeat = 1,

  /**
   * @generated from enum value: Type_SCHeartbeat = 2;
   */
  Type_SCHeartbeat = 2,

  /**
   * 发送聊天消息
   *
   * @generated from enum value: Type_CSChatMsg = 3;
   */
  Type_CSChatMsg = 3,

  /**
   * 接收聊天消息
   *
   * @generated from enum value: Type_SCChatMsg = 4;
   */
  Type_SCChatMsg = 4,

  /**
   * 阅读他人消息
   *
   * @generated from enum value: Type_CSReadMsg = 5;
   */
  Type_CSReadMsg = 5,

  /**
   * 推送他人阅读自己的消息
   *
   * @generated from enum value: Type_SCPushReadMsg = 7;
   */
  Type_SCPushReadMsg = 7,

  /**
   * 推送聊天消息  客户端收到返回  Type_CSAckPushMsg
   *
   * @generated from enum value: Type_SCPushChatMsg = 8;
   */
  Type_SCPushChatMsg = 8,

  /**
   * 登录认证
   *
   * @generated from enum value: Type_CSAuthToken = 9;
   */
  Type_CSAuthToken = 9,

  /**
   * 登录认证
   *
   * @generated from enum value: Type_SCAuthToken = 10;
   */
  Type_SCAuthToken = 10,

  /**
   * 客户端确认收到推送消息
   *
   * @generated from enum value: Type_CSAckPushMsg = 11;
   */
  Type_CSAckPushMsg = 11,

  /**
   * 推送最后一条消息id
   *
   * @generated from enum value: Type_SCPushLastMsgId = 13;
   */
  Type_SCPushLastMsgId = 13,

  /**
   * 拉取消息
   *
   * @generated from enum value: Type_CSPullMsgList = 14;
   */
  Type_CSPullMsgList = 14,

  /**
   * 返回拉取消息   客户端收到返回 Type_CSAckPushMsg
   *
   * @generated from enum value: Type_SCPullMsgList = 15;
   */
  Type_SCPullMsgList = 15,

  /**
   * 推送消息信息 用户上线推送消息数据
   *
   * @generated from enum value: Type_SCPushMessageInfo = 16;
   */
  Type_SCPushMessageInfo = 16,

  /**
   * 删除会话请求
   *
   * @generated from enum value: Type_CSDelChat = 17;
   */
  Type_CSDelChat = 17,

  /**
   * 删除会话返回
   *
   * @generated from enum value: Type_SCDelChat = 18;
   */
  Type_SCDelChat = 18,

  /**
   * 推送删除会话(有客户端删除会话时其它成员收到删除推送)
   *
   * @generated from enum value: Type_SCPushDelChat = 19;
   */
  Type_SCPushDelChat = 19,

  /**
   * 推送初始化删除会话
   *
   * @generated from enum value: Type_SCInitPushDelChats = 20;
   */
  Type_SCInitPushDelChats = 20,

  /**
   * 群消息推送
   *
   * 群成员增加
   *
   * @generated from enum value: Type_SCGroupEventMemberAdd = 21;
   */
  Type_SCGroupEventMemberAdd = 21,

  /**
   * 群成员删除
   *
   * @generated from enum value: Type_SCGroupEventMemberDel = 22;
   */
  Type_SCGroupEventMemberDel = 22,

  /**
   * 群成员退出
   *
   * @generated from enum value: Type_SCGroupEventMemberExit = 23;
   */
  Type_SCGroupEventMemberExit = 23,

  /**
   * 群名称修改
   *
   * @generated from enum value: Type_SCGroupEventNameEdit = 24;
   */
  Type_SCGroupEventNameEdit = 24,

  /**
   * 群禁言
   *
   * @generated from enum value: Type_SCGroupEventMutex = 25;
   */
  Type_SCGroupEventMutex = 25,

  /**
   * 转让群主
   *
   * @generated from enum value: Type_SCGroupEventAdminTransfer = 26;
   */
  Type_SCGroupEventAdminTransfer = 26,

  /**
   * 群解散
   *
   * @generated from enum value: Type_SCGroupEventDismiss = 27;
   */
  Type_SCGroupEventDismiss = 27,

  /**
   * 群有新公告
   *
   * @generated from enum value: Type_SCGroupEventNotice = 28;
   */
  Type_SCGroupEventNotice = 28,

  /**
   * 其它设备登录
   *
   * @generated from enum value: Type_SCOtherLogin = 29;
   */
  Type_SCOtherLogin = 29,

  /**
   * 群事件确认  21 - 28 收到后回复msgId
   *
   * @generated from enum value: Type_CSGroupEventAck = 30;
   */
  Type_CSGroupEventAck = 30,

  /**
   * 加载聊天记录
   *
   * @generated from enum value: Type_CSLoadChatRecord = 31;
   */
  Type_CSLoadChatRecord = 31,

  /**
   * 加载聊天记录返回
   *
   * @generated from enum value: Type_SCLoadChatRecord = 32;
   */
  Type_SCLoadChatRecord = 32,

  /**
   * 消息置顶
   *
   * @generated from enum value: Type_CSMsgTop = 33;
   */
  Type_CSMsgTop = 33,

  /**
   * 消息置顶返回
   *
   * @generated from enum value: Type_SCMsgTop = 34;
   */
  Type_SCMsgTop = 34,

  /**
   * 消息置顶推送
   *
   * @generated from enum value: Type_SCPushMsgTop = 35;
   */
  Type_SCPushMsgTop = 35,

  /**
   * 消息置顶确认
   *
   * @generated from enum value: Type_CSMsgTopAck = 36;
   */
  Type_CSMsgTopAck = 36,

  /**
   * 删除会话推送确认 收到 Type_SCPushDelChat(19)和Type_SCInitPushDelChats(20) 之后的协议返回
   *
   * @generated from enum value: Type_CSPushDelChatsAck = 37;
   */
  Type_CSPushDelChatsAck = 37,
}

/**
 * Describes the enum proto.MessageType.
 */
export const MessageTypeSchema: GenEnum<MessageType> = /*@__PURE__*/
  enumDesc(file_session, 0);

/**
 * 聊天类型
 *
 * @generated from enum proto.ChatType
 */
export enum ChatType {
  /**
   * 默认值
   *
   * @generated from enum value: ChatType_Unknown = 0;
   */
  ChatType_Unknown = 0,

  /**
   * 单聊
   *
   * @generated from enum value: ChatType_Single = 1;
   */
  ChatType_Single = 1,

  /**
   * 群聊
   *
   * @generated from enum value: ChatType_Group = 2;
   */
  ChatType_Group = 2,
}

/**
 * Describes the enum proto.ChatType.
 */
export const ChatTypeSchema: GenEnum<ChatType> = /*@__PURE__*/
  enumDesc(file_session, 1);

